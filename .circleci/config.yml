version: "2.0"
jobs:
  build:
    docker:
       - image: circleci/openjdk:8-jdk-browsers
       
    working_directory: ~/italianrestaurant
    
    steps:
    - checkout
    
    - setup_remote_docker
    
    - run:
        name: Install Docker client
        command: |
          set -x
          VER="17.03.0-ce"
          curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
          tar -xz -C /tmp -f /tmp/docker-$VER.tgz
          sudo cp -r /tmp/docker/* /usr/bin
    
    - run:
        name: Install Docker Compose
        command: |
           sudo apt-get update 
           sudo apt-get install docker-compose
#          set -x
#          sudo curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
#          sudo chmod +x /usr/local/bin/docker-compose
           
    
       
    - run:
        name: Start Kafka
        command: |
          mkdir kafka-data
          cd kafka-data
          wget https://raw.githubusercontent.com/guillermoherrero/italianrestaurant/master/kafka/docker-compose-test.yml
          mv docker-compose-test.yml docker-compose.yml
          docker-compose up -d
    
    - run:
        name: Test Services
        command: | 
          mvn test -f cook/pom.xml
          mvn test -f menu/pom.xml
          mvn test -f waiter/pom.xml
          mvn test -f discoveryserver/pom.xml
          mvn test -f configserver/pom.xml
          mvn test -f adminui/pom.xml
          mvn test -f microservicesdashboard/pom.xml
          
#workflows:
#  version: 2
#  test_package_build_and_deploy:
#    jobs:
#      - test
      
#  test-configserver:
#    machine: true
#    working_directory: ~/italianrestaurant
#    steps:
#    - checkout
#    - run:
#        name: Testing Config Server
#        command: mvn test -f configserver/pom.xml
#  test-adminui:
#    machine: true
#    working_directory: ~/italianrestaurant
#    steps:
#    - checkout
#    - run:
#        name: Testing Admin UI
#        command: mvn test -f adminui/pom.xml
#  test-microservicesdashboard:
#    machine: true
#    working_directory: ~/italianrestaurant
#    steps:
#    - checkout
#    - run:
#        name: Testing Microservices Dashboard
#        command: mvn test -f microservicesdashboard/pom.xml
#  test-cook:
#    machine: true
#    working_directory: ~/italianrestaurant
#    steps:
#    - checkout
#    - run:
#        name: Running Kafka with Docker Compose
#        command: |
#          cd kafka
#          docker-compose up -d
#    - run:
#        name: Testing Cook
#        command: mvn test -f cook/pom.xml
#  test-waiter:
#    machine: true
#    working_directory: ~/italianrestaurant
#    steps:
#    - checkout
#    - run:
#        name: Running Kafka with Docker Compose
#        command: |
#          cd kafka
#          docker-compose up -d
#    - run:
#        name: Testing Waiter
#        command: mvn test -f waiter/pom.xml
#  test-menu:
#    machine: true
#    working_directory: ~/italianrestaurant
#    steps:
#    - checkout
#    - run:
#        name: Running Kafka with Docker Compose
#        command: |
#          cd kafka
#          docker-compose up -d
#    - run:
#        name: Testing Menu
#        command: mvn test -f menu/pom.xml      
#        
#  deploy-discoveryserver:
#    machine: true
#    working_directory: ~/italianrestaurant
#    steps:
#    - checkout
#    - run:
#        name: Deploying Discovery Server
#        command: |
#          cd discoveryserver
#          mvn clean package -DskipTests=true
#          docker build -t guillermoherrero/italianrestaurant-discoveryserver .
#          docker login -u="$DOCKER_USER" -p="$DOCKER_PASS" -e="$DOCKER_EMAIL"
#          docker push guillermoherrero/italianrestaurant-discoveryserver
#  deploy-configserver:
#    machine: true
#    working_directory: ~/italianrestaurant
#    steps:
#    - checkout
#    - run:
#        name: Deploying Config Server
#        command: |
#          cd configserver
#          mvn clean package -DskipTests=true
#          docker build -t guillermoherrero/italianrestaurant-configserver .
#          docker login -u="$DOCKER_USER" -p="$DOCKER_PASS" -e="$DOCKER_EMAIL"
#          docker push guillermoherrero/italianrestaurant-configserver
#  deploy-adminui:
#    machine: true
#    working_directory: ~/italianrestaurant
#    steps:
#    - checkout
#    - run:
#        name: Deploying Admin UI
#        command: |
#          cd adminui
#          mvn clean package -DskipTests=true
#          docker build -t guillermoherrero/italianrestaurant-adminui .
#          docker login -u="$DOCKER_USER" -p="$DOCKER_PASS" -e="$DOCKER_EMAIL"
#          docker push guillermoherrero/italianrestaurant-adminui
#  deploy-microservicesdashboard:
#    machine: true
#    working_directory: ~/italianrestaurant
#    steps:
#    - checkout
#    - run:
#        name: Deploying Microservices Dashboard
#        command: |
#          cd microservicesdashboard
#          mvn clean package -DskipTests=true
#          docker build -t guillermoherrero/italianrestaurant-microservicesdashboard .
#          docker login -u="$DOCKER_USER" -p="$DOCKER_PASS" -e="$DOCKER_EMAIL"
#          docker push guillermoherrero/italianrestaurant-microservicesdashboard
#  deploy-cook:
#    machine: true
#    working_directory: ~/italianrestaurant
#    steps:
#    - checkout
#    - run:
#        name: Deploying Cook
#        command: |
#          cd cook
#          mvn clean package -DskipTests=true
#          docker build -t guillermoherrero/italianrestaurant-cook .
#          docker login -u="$DOCKER_USER" -p="$DOCKER_PASS" -e="$DOCKER_EMAIL"
#          docker push guillermoherrero/italianrestaurant-cook
#  deploy-waiter:
#    machine: true
#    working_directory: ~/italianrestaurant
#    steps:
#    - checkout
#    - run:
#        name: Deploying Waiter
#        command: |
#          cd waiter
#          mvn clean package -DskipTests=true
#          docker build -t guillermoherrero/italianrestaurant-waiter .
#          docker login -u="$DOCKER_USER" -p="$DOCKER_PASS" -e="$DOCKER_EMAIL"
#          docker push guillermoherrero/italianrestaurant-waiter
#  deploy-menu:
#    machine: true
#    working_directory: ~/italianrestaurant
#    steps:
#    - checkout
#    - run:
#        name: Deploying Microservices Dashboard
#        command: |
#          cd menu
#          mvn clean package -DskipTests=true
#          docker build -t guillermoherrero/italianrestaurant-menu .
#          docker login -u="$DOCKER_USER" -p="$DOCKER_PASS" -e="$DOCKER_EMAIL"
#          docker push guillermoherrero/italianrestaurant-menu
          
#workflows:
#  version: 2
#  build_and_test:
#    jobs:
#      - test-discoveryserver
#      - test-configserver
#      - test-adminui
#      - test-microservicesdashboard
#      - test-cook
#      - test-waiter
#      - test-menu
#      - deploy-discoveryserver:
#          requires:
#            - test-discoveryserver
#      - deploy-configserver:
#          requires:
#            - test-configserver
#      - deploy-adminui:
#          requires:
#            - test-adminui
#      - deploy-microservicesdashboard:
#          requires:
#            - test-microservicesdashboard
#      - deploy-cook:
#          requires:
#            - test-cook
#      - deploy-waiter:
#          requires:
#            - test-waiter
#      - deploy-menu:
#          requires:
#            - test-menu